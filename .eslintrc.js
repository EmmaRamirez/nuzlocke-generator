/*
ðŸ‘‹ Hi! This file was autogenerated by tslint-to-eslint-config.
https://github.com/typescript-eslint/tslint-to-eslint-config

It represents the closest reasonable ESLint configuration to this
project's original TSLint configuration.

We recommend eventually switching this configuration to extend from
the recommended rulesets in typescript-eslint.
https://github.com/typescript-eslint/tslint-to-eslint-config/blob/master/docs/FAQs.md

Happy linting! ðŸ’–
*/
module.exports = {
    "env": {
        "browser": true,
        "es6": true,
        "node": true
    },
    "extends": [
        "prettier",
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "project": "tsconfig.json",
        "sourceType": "module"
    },
    "ignorePatterns": [
        "./webpack.config.ts",
        "./.eslintrc.js"
    ],
    "plugins": [
        "@typescript-eslint",
        "@typescript-eslint/tslint"
    ],
    "rules": {
        // "@typescript-eslint/class-name-casing": "error",
        "@typescript-eslint/explicit-member-accessibility": [
            "error",
            {
                "accessibility": "explicit"
            }
        ],
        "@typescript-eslint/indent": "error",
        "@typescript-eslint/no-misused-new": "error",
        "@typescript-eslint/prefer-for-of": "error",
        "@typescript-eslint/prefer-namespace-keyword": "error",
        "@typescript-eslint/quotes": [
            "warn",
            "single"
        ],
        "@typescript-eslint/semi": [
            "error",
            "always"
        ],
        "@typescript-eslint/type-annotation-spacing": "off",
        "brace-style": [
            "error",
            "1tbs"
        ],
        "camelcase": "error",
        "constructor-super": "error",
        "default-case": "error",
        "eqeqeq": [
            "error",
            "smart"
        ],
        "id-blacklist": [
            "error",
            "any",
            "Number",
            "number",
            "String",
            "string",
            "Boolean",
            "boolean",
            "Undefined",
            "undefined"
        ],
        "id-match": "error",
        // "import/no-default-export": "error",
        "import/order": "off",
        "no-caller": "error",
        "no-eval": "error",
        "no-new-wrappers": "error",
        // This will otherwise error on most action declarations, which is a bit odd
        "no-redeclare": "warn",
        "no-trailing-spaces": "error",
        "no-underscore-dangle": "error",
        "no-unsafe-finally": "error",
        "no-var": "error",
        "prefer-const": "error",
        "prefer-template": "error",
        "@typescript-eslint/tslint/config": [
            "error",
            {
                "rules": {
                    "insecure-random": true,
                    "mocha-avoid-only": true,
                    "no-document-domain": true,
                    "no-document-write": true,
                    "no-duplicate-case": true,
                    "no-empty-interfaces": true,
                    "react-a11y-anchors": true,
                    "react-a11y-aria-unsupported-elements": true,
                    "react-a11y-event-has-role": true,
                    "react-a11y-img-has-alt": true,
                    "react-a11y-lang": true,
                    "react-a11y-tabindex-no-positive": true,
                    "react-this-binding-issue": [
                        true,
                        {
                            "allow-anonymous-listeners": true
                        }
                    ],
                    "valid-typeof": true,
                    "whitespace": [
                        true,
                        "check-branch",
                        "check-decl",
                        "check-operator",
                        "check-separator",
                        "check-module"
                    ]
                }
            }
        ]
    }
};
